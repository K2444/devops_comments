what is maven?
is a opensource tool devloped by apache group
its written by java
its a build tool
----------------------
what does maven help with?
apache maven helps with manage all the process, such as building, documentation, releasing and distribution in project management.
whenever start maven project it will automatically create pom.xml
in pom.xml have depencies and plugins
in depencies is automatically download libraries from third party and automatically upgrade if we can change only version number.
plugins having configuration about project
Maven makes it easy for the developer to build a project in different environments, without worrying about the dependencies, processes, etc.
---------------------------------
What are the different elements that Maven takes care of?
Builds
Dependencies
Reports 
Distribution
Releases
Mailing list
-----------------------------------
What is POM?
Project Object Model (POM) refers to the XML files with all the information regarding project and configuration details.
It has the description of the project, information regarding the versioning and configuration management of the project.
The XML file is in the project home directory. When we tend to execute a task, Maven searches for the POM in the current directory.
------------------------------------------
what is difference between ant and maven?

--------------------------------------
What all is included in the POM?
POM contains the following configurations:
Dependencies
Developers and contributors
Plugins
Plugin configuration
Resources 
------------------------
 What are the minimum required elements for POM? 
The minimum required elements for POM are:
project root
modelVersion – should be 4.0.0
groupId – project’s group id
artifactId – artifact (project) id
version – version of the artifact
------------------------------------
What are the steps to install Maven on Windows?
To install Maven on Windows, observe the following steps:
Download Maven first, and then extract it.
In the environment variable, add JAVA_HOME, and MAVEN_HOME.
Then, add the environment path in the Maven variable.
Lastly, verify the Maven installation by checking its version. The command mvn -version will display the version installed in the system.
--------------------------------
What is meant by the term ‘Build Tool’?
A build tool is essential for the process of building. It is needed for the following procedures:
Generating source code.
Generating documentation from the source code.
Compiling of source code.
Packaging of the compiled codes into JAR files.
Installing the packaged code in a local repository, server, or central repository.
-----------------------------------------------
What are the steps to install Maven on Ubuntu?
primary step to install java
then install maven
like sudo apt install maven -y
then check mvn version
----------------------------------
what is the command insatll jar file in local repository?
mvn install used to install Jar file in lical repoitory
to install JAR file mannually into local repository, the following plugins used
mvn install:install-file-Dfile=<file path>.
mvn install:install-file -Dfile=<path-to-jar> -DgroupId=<group-id> -DartifactId=<artifact-id> -Dversion=<version> -Dpackaging=jar
-------------------------------------------
how to you know the version of the maven being used?
mvn --version command used to check the current version
-----------------------------------------------
What is Maven Build Lifecycle?
Maven lifecycle is a collection of steps that are to be followed, to build a project. There are three built-in build lifecycles:
Default: Handles project deployment.
Clean: Handles project cleaning.
Site: Handles the creation of the project site’s documentation.
----------------------
What is a Maven Repository?
Maven repositories refer to the directories of packaged JAR files that contain metadata. The metadata refers to the POM files relevant to each project. 
This metadata is what allows Maven to download dependencies.
There are three types of repositories:
Local Repository
Remote Repository
Central Repository
--------------------------------
which command used build a maven site?
mvn site
The mvn site command generates a project documentation website based on the information specified in your project's pom.xml file. This site typically includes reports about the project, such as:
Project Information: Description, license, dependencies, and developers.
Reports: Test results, code coverage, static analysis, etc.
The site is generated in the target/site directory by default.
---------------------------
what are the differnt conventions in used while naming a project in maven?
artifactid:
use loweacse latters
aviod special character or spaces
use hypens and underscors for word seperation
groupid:
use loweacse latters
aviod special character or spaces
following revers dommain naming convention (com.example)
version:
following the semantic versioning format (1.0.0)
Use a format of MAJOR.MINOR.PATCH.
MAJOR: Introduces breaking changes.
MINOR: Adds new features while maintaining backward compatibility.
PATCH: Fixes bugs without affecting compatibility.
Use -SNAPSHOT for versions still in development.
----------------------------------
what is a maven artifact:
In maven, artifact is a deployable component of the project. it could be a JAR (jave arceive), WAR (web application archeive), EAR (enterprice archieve) or other file produced during the build process.
Each artifact identified by group id, artifact id and version in the maven repository.
-----------------------------------------
what are the phase of clean life cycle?
pre clean
clean
post clean
--------------------------------------
what are the phases of site life cycle?
pre-site
site
post-site
site-deploy
---------------------------------------
what is meant by maven plugins?
A Maven plugin is a collection of goals that can be executed during the build process to perform specific tasks. Maven plugins are essential components of the Maven Build Lifecycle, and they help automate repetitive tasks such as compiling code, running tests, packaging applications, and deploying artifacts. Each plugin is made up of one or more goals, and each goal represents a specific task (e.g., compiling Java files, generating Javadoc, etc.).
Maven plugins can be used in various phases of the build lifecycle to extend Maven’s functionality.
--------------------------------------
Why are Maven Plugins used?
Plugins are the central feature of Maven that allow for the reuse of common build logic across multiple projects. They do this by executing an "action" (i.e. creating a WAR file or compiling unit tests) in the context of a project's description - the Project Object Model (POM).
Maven Plugins are used to: 
Create a JAR file.
Create a WAR file.
Compile code files.
Unit testing of code.
Create project documentation.
Create project reports.
-------------------------------
what are the types of maven plugins?
build plugins
excuted during the build and are configured in the <buil/> element of pom.xml
such maven-compiler-plugins
such maven-jar-plugins
such maven-aessembly-plugins
such maven-compiler-plugins
reporting plugins:
excuted during the stage generation and are configured in the <reporting/> elementd of the pom.xml
maven-surefire-plugins
maven-checkstyle-plugins
maven-pmd-plugins
maven-javadoc-plugins
maven-dependency-plugins
-------------------------------


dependencies:
 <dependencies>
    <dependency>
      <groupId>junit</groupId>------company (organisation name)
      <artifactId>junit</artifactId>-----(project name)
      <version>4.12</version> ---(version defult)
      <scope>test</scope>---(until run)
    </dependency>
  </dependencies>
--------------------
build life cycle:
validate--- validate the code
compile -- compile the code
test
package
integration test
verify
install-- install in local repo
deploy -- install in remote rep's to use by other projects 
-------------------------------
How does Maven Architecture work?
Maven architecture works in three steps, which are as follows:
The first step is to read the pom.xml file.
Then, it downloads the dependencies defined in pom.xml into the local repository from the central repository.
Lastly, it creates and generates a report according to the requirements, and executes life-cycles, phases, goals, plugins, etc.
--------------------------
What are the different types of Maven Repositories?
There are three types of Maven repositories:
1. Local Repository: 
Local repository refers to the machine of the developer where all the project material is saved.
The local repository contains all the dependency jars.
2. Remote Repository:
The remote repository refers to the repository present on a server that is used when Maven needs to download dependencies.
Whenever anything is required from the remote repository, it is first downloaded to the local repository, and then it is used.
3. Central Repository:
Central repository refers to the Maven community that comes into action when there is a need for dependencies, and those dependencies cannot be found in the local repository.
Maven downloads the dependencies from here in the local repository whenever needed.

mvn archetype:generate
2170
8
com.demoprj
demoprj
snapshot
com.demoprj.app
yes

 mvn validate
 mvn compile
 mvn tes
 mvn test
 mvn package
 mvn install
 mvn package
 mvn verify
full projcet has been created 


















