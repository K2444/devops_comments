docker comments
sudo apt install docker.io
sudo docker info
if you want saw client and server info without sudo then
sudo usermod -aG docker ubuntu
then switch into root system
sudo su -
su - ubuntu >> exit
docker info
-------------
system
  df          Show docker disk usage
  TYPE            TOTAL     ACTIVE    SIZE      RECLAIMABLE
  Images          0         0         0B        0B
  Containers      0         0         0B        0B
  Local Volumes   0         0         0B        0B
  Build Cache     0         0         0B        0B
  ---------------------------------------------
docker system df 
TYPE            TOTAL     ACTIVE    SIZE      RECLAIMABLE
  Images          0         0         0B        0B
  Containers      0         0         0B        0B
  Local Volumes   0         0         0B        0B
  Build Cache     0         0         0B        0B

  events      Get real time events from the server
  info        Display system-wide information
  prune       Remove unused data
 docker login -u suvitha
 docker system df
 run         Create and run a new container from an image
  exec        Execute a command in a running container
  ps          List containers
  build       Build an image from a Dockerfile
  pull        Download an image from a registry
  push        Upload an image to a registry
  images      List images
  login       Log in to a registry
  logout      Log out from a registry
  search      Search Docker Hub for images
  version     Show the Docker version information
  info        Display system-wide information
 attach      Attach local standard input, output, and error streams to a running container
  commit      Create a new image from a container's changes
  cp          Copy files/folders between a container and the local filesystem
  create      Create a new container
  diff        Inspect changes to files or directories on a container's filesystem
  events      Get real time events from the server
  export      Export a container's filesystem as a tar archive
  history     Show the history of an image
  import      Import the contents from a tarball to create a filesystem image
  inspect     Return low-level information on Docker objects
  kill        Kill one or more running containers
  load        Load an image from a tar archive or STDIN
  logs        Fetch the logs of a container
  pause       Pause all processes within one or more containers
  port        List port mappings or a specific mapping for the container
  rename      Rename a container
  restart     Restart one or more containers
  rm          Remove one or more containers
  rmi         Remove one or more images
  save        Save one or more images to a tar archive (streamed to STDOUT by default)
  start       Start one or more stopped containers
  stats       Display a live stream of container(s) resource usage statistics
  stop        Stop one or more running containers
  tag         Create a tag TARGET_IMAGE that refers to SOURCE_IMAGE
  top         Display the running processes of a container
  unpause     Unpause all processes within one or more containers
  update      Update configuration of one or more containers
  wait        Block until one or more containers stop, then print their exit codes
docker run -d --name <name> <image name> ----> run a container -----> it only for application
docker run -d -it --name web1 alpine /bin/bash ----> to run a container ----> it for os  
docker exec -it <container name> /bin/bash ---> into container
docker run -d -it --name <container new name> <image name>
exp:
docker run -d -it --name myapp <imgname>
docker run -d -it --name myapp -p 82:80 <image name>
                                 (prefix:suffix)  suffix can be lisner port number /prefix can be anything
docker exec <container name> mkdir /tmp/foldername
exp:
docker exec web1 mkdir /tmp/t1
this comment used to perform task directly without into containers 
docker exec web1 ls /tmp/  to see list

if u want see port id for particular image
docker inspect <imgname>
docker history or docker histor <container name>
 exp:
docker exec -it web1 /bin/bash
local to container:
docker cp <filename> <containerid>:foler ---copy file from one container to another container
docker cp <filename> <containername>:/dir/
container to local:
docker cp <containername>:/tmp/<filename> . 
docker stats >>> about usage
if u want to see inditual 
docker stats <container name>
if u wnat delete all space
docker system purne
if u want to search images 
docker search ubuntu >>>(image name)
if save img in local
docker save <imgid> > myapp.tar   u can only save aa tar file
scp <filename.tar> ubuntu@174.2.3.22:/home/foldername >>>to another host
in another host:
docker load -i <filename.tar>
backup and retsore the docker images one host to another host without internet
if u want do delete the container, first u should stop the container
docker rm <container name>
docker rmi <imagename>
at a time delete all images
see all inages:
suod docker images -a -q 
docker rmi $(sudo docker images -a -q)
create image from container:
 install cmt:
 apt-get install wget

commit docker image with tag
 docker commit <container id> <img name>:<tagname>
docker commit bdgu56497hk webapp:2.1
push to dockerhub:
docker push <imgname>
  
docker images:
docker images are just a templates of a docker containers and it is very similer to snapshot images 
with smaller in size. Singe docker 





  
